Installation：
參考 https://github.com/endernewton/tf-faster-rcnn的installation, 但步驟稍微不同
1. 不需要 Clone the repository
#ln -sfv連結用軟連結

2和3: lib_fr是faster r-cnn的library, lib_drl是加入HAI的library, lib_fr 和 lib_drl 都要安裝, 這邊以lib_drl為例
	Update your -arch in setup script to match your GPU
	cd lib_drl
	# Change the GPU architecture (-arch) if necessary
	#徐GTX 1080 (Ti) sm_61我的電腦是這個
	#徐lspci | grep -i nvidia可看gpu
	#徐nvidia-smi可看gpu狀況
	gedit setup.py 照他的方式改
	make clean
	make
	#徐 錯誤raise EnvironmentError('The nvcc binary could not be 'OSError: The nvcc binary could not be located in your $PATH. Either add it to your path, or set $CUDAHOME
	#徐 解法 sudo apt install nvidia-cuda-toolkit
	cd ..

4. Install the Python COCO API
	cd data/coco/PythonAPI
	make
	cd ../../..

Setup data:
我都設定好了,應該可以直接用
如果不行就參考https://github.com/endernewton/tf-faster-rcnn的setup data
#徐 若是要更改資料集，需要改lib_drl/model/config.py/__C.NBR_CLASSES = 4
#徐                以及lib_drl/datasets/pascal_voc.py/self._classes = ('__background__',
#徐 ./data/ 在此處改資料集
#徐 要刪 ./data/cache (沒刪會出iimdb.py裡boxes的問題)
#嘉 補充：刪cache注意切勿刪當下在訓練的資料集檔案

如果想要調整超參數設定, 可以修改./experiments/cfgs/裡面的yml檔
如果要重新訓練faster rcnn:
			#徐 改資料集的話，要將lib_fr/dataset/pascal_voc.py裡的類別做更改，約在41行的地方
	如要訓練 vgg16, res101
	1). training: 執行 ./experiments/scripts/train_faster_rcnn.sh GPU_ID DATASET NET
	2). testing: 執行 ./experiments/scripts/test_faster_rcnn.sh GPU_ID DATASET NET
	測試結果位於 ./fr-rcnn-weights/${NET}/${TEST_IMDB}
	example: 只須要選擇使用的網路跟GPU
		./experiments/scripts/train_faster_rcnn.sh 0 cell vgg16   
		#徐 錯誤ValueError: The passed save_path is not a valid checkpoint: fr-rcnn-weights/vgg16/cell_train/default/vgg16_faster_rcnn_iter_110000.ckpt
		#劉 error : list out of index; 觀察iters如果不是從頭開始（ex:從5000左右開始)，同以下解法
		#徐 解法 fr-rcnn-weights刪掉，使他可以重新訓練

		./experiments/scripts/test_faster_rcnn.sh 1 pascal_voc_0712 res101
		#徐 錯誤 no CUDA-capable device is detected
		#徐 解法 我只有一個gpu 須把1改成0

	如要訓練 P4 ([NET]固定為res101)
	1). training: 執行 ./experiments/scripts/train_P4.sh GPU_ID DATASET res101
	#徐 問題 拒絕不符權限的操作 解法chmod u+x train_P4.sh
	# ll或ls -l
	2). testing: 執行 ./experiments/scripts/test_P4.sh GPU_ID DATASET res101
	測試結果位於 ./fr-rcnn-weights/P4/res101/${TEST_IMDB}
	example: 只須要選擇使用GPU, 其他都一樣
		./experiments/scripts/train_P4.sh 0 cell res101
		./experiments/scripts/test_P4.sh 1 cell res101

4. 訓練LRP-HAI: alpha=True
			#徐 改資料集的話，要將lib_drl/dataset/pascal_voc.py裡的類別做更改，約在41行的地方
	feature extractor為vgg16, res101:
		1). training:
			設定SAVE_PATH(儲存位置), WEIGHTS_PATH(pretrained_model位置)
			執行 ./experiments/scripts/train_LRP_HAI.sh GPU_ID DATASET NET DET_START ITERS ALPHA
			#徐 將drl-rpn-vgg16.yml複製並改名LRP-HAI-vgg16.yml
		2). testing: 
			設定WEIGHTS_PATH(訓練好的model位置)
			執行 ./experiments/scripts/test_LRP_HAI.sh GPU_ID DATASET NET NBR_FIX ALPHA
			#徐 WEIGHTS_PATH 改成 WEIGHTS_PATH=/home/xuus/LRP-HAI/TEST/L-RPN-HAM/${DATASET}/${NET}/L-RPN-HAM-1/output/${NET}_LRP_HAI/${TRAIN_IMDB}/${NET}_LRP_HAI_iter_110000.ckpt
			測試結果位於 ./output/
		example: 只須要選擇使用的網路跟GPU, 其他都一樣
			./experiments/scripts/train_LRP_HAI.sh 0 cell vgg16 40000 110000 True
			#徐 40000的意思是，訓練40000次前，訓練HAI，訓練40000次後，訓練HAI+detector
			./experiments/scripts/test_LRP_HAI.sh 1 cell res101 0 True
	feature extractor為P4:
		NET設為res101
		1). training: 
			設定SAVE_PATH(儲存位置), WEIGHTS_PATH(pretrained_model位置)
			執行 ./experiments/scripts/train_LRP_HAI_P4.sh GPU_ID DATASET NET DET_START ITERS ALPHA
		2). testing: 
			設定WEIGHTS_PATH(訓練好的model位置)		
			執行 ./experiments/scripts/test_LRP_HAI_P4.sh GPU_ID DATASET NET NBR_FIX ALPHA
			測試結果位於 ./output/
		example: 只須要選擇使用GPU, 其他都一樣
			./experiments/scripts/train_LRP_HAI_P4.sh 0 pascal_voc_0712 res101 40000 110000 True
			./experiments/scripts/test_LRP_HAI_P4.sh 1 pascal_voc_0712 res101 0 True

5.DEMO (./tool/demo_drl.py)
	執行./tool/demo_drl.py，如要調整使用的weights, config, datasets的話在parse_args()調
	記得要修改所使用的config.yml檔, DO_VISUALIZE改成True

        #徐     default='experiments/cfgs/LRP-HAI-P4.yml', type=str)
        #徐 改成default='experiments/cfgs/LRP-HAI-vgg16.yml', type=str)

        #徐     default='/media/data/LRP-HAI/experiments/drl-model-2/P4/res101/drl-model-2-1/output/res101_LRP_HAI/cell_train/res101_LRP_HAI_iter_110000.ckpt',
        #徐 改成default='/home/xuus/LRP-HAI/TEST/L-RPN-HAM/cell/vgg16/L-RPN-HAM-1/output/vgg16_LRP_HAI/cell_train/vgg16_LRP_HAI_iter_110000.ckpt',

        #徐     default='cell_val', type=str)
        #徐 改成default='cell_train', type=str)

        #徐     default='res101', type=str)
        #徐 改成default='vgg16', type=str)

6. 創建資料集（徐）
    lib_fr & lib_drl 都要改(copy),此處以 lib_fr 作為範例
    需要改./LRP-HAI/lib_fr/datasets/factory.py
    需要加./LRP-HAI/lib_fr/datasets/{DATASET}.py
    需要改./LRP-HAI/experiments/scripts/下所有都要新增
